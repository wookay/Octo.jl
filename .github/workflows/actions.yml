# https://github.com/julia-actions/cache#usage
name: CI

on: [push, pull_request]

# needed to allow julia-actions/cache to delete old caches that it has created
permissions:
  actions: write
  contents: read

env:
  PGPASSWORD: postgres
  MYSQL_HOST: 127.0.0.1
  MYSQL_ROOT_PASWORD:

jobs:
  Test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        julia-version: [1.11.5]         # April 4, 2025
        julia-arch: [x64]
        coverage: [true]
        include:
          - julia-version: nightly
            os: ubuntu-latest
            coverage: false
          - julia-version: 1.12.0-beta2 # April 25, 2025
            os: ubuntu-latest
            coverage: false
          - julia-version: 1.6.7        # July 20, 2022
            os: ubuntu-latest
            coverage: false
    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
            MYSQL_DATABASE: mysqltest
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Setup PostgreSQL
      env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
      run: |
           psql --version
           netstat -nlp | grep 5432
           psql -h localhost -U postgres -tc 'SHOW server_version'
           psql -h localhost -U postgres -c '\conninfo'
           psql -h localhost -U postgres -c "CREATE DATABASE postgresqltest;"
           psql -h localhost -U postgres -c "CREATE DATABASE postgresqltest2;"

    - name: Setup MySQL
      run: |
           mysql --version
           mysqladmin -h 127.0.0.1 -uroot variables | grep socket
           mysql -h 127.0.0.1 -uroot -e 'show variables like "socket";'
           mysql -h 127.0.0.1 -uroot -e 'CREATE DATABASE IF NOT EXISTS mysqltest;'
           mysql -h 127.0.0.1 -uroot -e 'GRANT ALL PRIVILEGES ON mysqltest.* TO "root"@"localhost"'

    - uses: actions/checkout@v4
    - uses: julia-actions/setup-julia@v1
    - uses: julia-actions/cache@v1
    - uses: julia-actions/julia-buildpkg@v1
    - uses: julia-actions/julia-runtest@v1

    - uses: julia-actions/julia-processcoverage@v1
      if: matrix.coverage == true

    - uses: codecov/codecov-action@v1
      if: matrix.coverage == true
      with:
        file: lcov.info

  RunForMacOS:
     needs: Test
     if: github.event.ref == 'refs/heads/master'
     runs-on: macos-latest
     steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v1
      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1

  # RunForWindows:
  #   needs: Test
  #   if: github.event.ref == 'refs/heads/master'
  #   runs-on: windows-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - uses: julia-actions/setup-julia@v1
  #   - uses: julia-actions/cache@v1
  #   - uses: julia-actions/julia-buildpkg@v1
  #   - uses: julia-actions/julia-runtest@v1
